HIT SAVE TO SAVE CHANGES!

To-Do
- HUD element showing color selection
- HUD element showing shapes available?
- Options menu
- Input mapping in-game
- Save feature
- Fix clipping into walls in Fly mode
- Standardize code (work out where signal functions go and all that)
- Add prompts on custom color picker (CCP) to explain controls
- Add button on CCP to swap joy stick controls
- Make input method for keyboard+mouse where mouse drag determines direction in fly mode

Questions to answer:
- When selecting an already played level, should the player start from scratch, reload the way it was left, or give an option?
- How large should levels be?
- Should speed be tied to size?
- Keyboard/Mouse Controls
- Make list of all unlocks and think how to spread them out.
- Think up level themes.
- Having movement & paint inputs be toggles so people don't have to hold a button

Notes:
- Project Settings > Rendering > Environment > Default Clear Color
- DON'T make edges of platforms black
- Never set PlayerMask to invisible. Stops painting from working
- Make sure Player's paint signal is connected to something to paint
- Don't set the level size to 32000x32000. Not that it doesn't work, but zooming out lags like crazy and probably isn't worth being THAT large
- Dummy_Button is just a button to test a feature without having to worry about any other input and SHOULD BE REMOVED IN FINAL BUILD!!!
- left_click is just there to verify mouse release for the color wheel palette menu button

Dialogue Tree Notes:
- Conditionals in Dialogue Tree are handled as strings. Use placeholders to put info back into them.
- PassCondition tells if the conditional is true or not
- MUST Ctrl+S to save Dialogue Tree!!!!

TODO Notes:
- Supports TODO, HACK, BUG, FIXME, and NOTE
- Just write that on a line where you want it to take you and when you click on it it'll warp you to it.

Circular Container Notes:
- Copy custom animator but use node.rect_pivot_offset and node.set_rotation(target_pos.angle_to_point(container_center)) and set Start Empty to true
